{"version":3,"sources":["components/common/Loader.js","services/options.js","components/common/HigherOrder/MutationCall.js","services/mutations.js","components/common/Form/Input.js","components/common/Form/Error.js","components/common/Form/Button.js","hooks/useForm.js","components/common/Form/Form.js","schemas/users.js","components/common/Form/Login.js","components/pages/LoginPage.js","components/common/HigherOrder/PrivatePage.js","components/common/Form/Signup.js","components/pages/SignupPage.js","services/queries.js","components/common/Nickname/LikeButton.js","hooks/useToggle.js","components/common/Nickname/Nickname.js","components/common/Nickname/NicknameList.js","components/common/PageLinks.js","components/common/HigherOrder/QueryCall.js","components/pages/NicknamesPage.js","components/common/NavLink.js","components/common/Header.js","components/pages/UserNicknames.js","services/client.js","components/common/Form/CreateNickname.js","components/pages/CreatePage.js","App.js","styles/theme.js","index.js"],"names":["animation","keyframes","StyledLoader","styled","div","props","theme","colors","paleGreen","Loader","className","errorPolicy","MutationCall","query","Component","useMutation","options","mutation","data","loading","error","callMutation","variables","message","LOGIN_CALL","gql","SIGNUP","ADD_NICKNAME","LIKE","DELETE_NICKNAME","StyledLabel","label","setFont","StyledInput","input","Input","name","value","handleChange","title","toUpperCase","replace","type","reduce","finalType","currentType","includes","htmlFor","id","placeholder","onChange","Error","errorType","length","StyledButton","button","slime","useForm","initialState","schema","useState","form","setForm","errors","setErrors","disabled","setDisabled","useEffect","isValid","then","valid","e","target","checked","newValue","yup","validate","catch","err","StyledForm","blue","Form","submit","formState","reset","onSubmit","preventDefault","Object","keys","map","key","Button","onClick","shared","username","required","trim","min","password","loginSchema","shape","signupSchema","email","Login","navigate","useNavigate","login","localStorage","setItem","window","location","reload","LoginPage","PrivatePage","component","rest","getItem","Signup","addUser","SignupPage","wantedProperties","GET_NICKNAMES","GET_USER_NICKNAMES","LikeButton","likes","liked","nickname_id","like","defaultValue","setValue","currentValue","useToggle","userliked","toggleLiked","totalLikes","useMemo","StyledNickname","li","orange","Nickname","user","nickname","createdBy","delNick","to","NicknameList","nicknames","PageLinks","page","useParams","pageInt","parseInt","QueryCall","useQuery","NicknamesPage","NavLink","children","StyledHeader","header","teal","Header","token","removeItem","UserNicknames","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","CreateNickname","setNickname","addNickname","CreatePage","StyledMain","main","black","tan","App","ApolloProvider","path","element","purple","navy","lightGrey","size","baseFont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23384a06.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst animation = keyframes`\n    0% {opacity: 0}\n    50% {opacity: 1}\n    100% {opacity: 0}\n`\nconst StyledLoader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    div {\n        border-radius: 100%;\n        margin: 2rem;\n        width: 30px;\n        height: 30px;\n        background-color: ${props => props.theme.colors.paleGreen};\n        animation: ${animation} 1s linear -.9s infinite;\n        &:nth-child(2) {animation-delay: -.6s;}\n        &:nth-child(3) {animation-delay: -.3s;}\n    }\n`\nexport default function Loader() {\n    return (\n        <StyledLoader>\n            <div className=\"loading-dot\"></div>\n            <div className=\"loading-dot\"></div>\n            <div className=\"loading-dot\"></div>\n        </StyledLoader>\n    )\n}","export default  {\n    errorPolicy: \"all\",\n}","import React from 'react'\nimport Loader from \"../Loader\"\nimport { useMutation } from '@apollo/client'\nimport options from '../../../services/options'\n\nexport default function MutationCall(props) {\n    const { query, Component } = props\n    const [mutation, { data, loading, error }] = useMutation(query, options);\n\n    const callMutation = variables => mutation({ variables })\n    \n    return (\n        <div>\n            <Component \n                callMutation={callMutation} \n                data={data}\n            />\n            {loading && <Loader/>}\n            {error && <p>{error.message}</p>}\n        </div>\n    )\n}\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_CALL = gql`\n  mutation UserLogin($username: String!, $password: String!) {\n    login(username: $username, password: $password)\n  }\n`;\n\nexport const SIGNUP = gql`\n  mutation Signup($username: String!, $password: String!, $email: String!) {\n    addUser(username: $username, password: $password, email: $email)\n  }\n`;\n\nexport const ADD_NICKNAME = gql`\n  mutation MakeNickname($nickname: String!) {\n    addNickname(nickname: $nickname) {\n      user {\n        username\n      }\n    }\n  }\n`;\n\nexport const LIKE = gql`\n  mutation Like($nickname_id: ID!) {\n    likeNickname(nickname_id: $nickname_id)\n  }\n`;\n\nexport const DELETE_NICKNAME = gql`\n  mutation RemoveNickname($nickname_id: ID!) {\n    deleteNickname(nickname_id: $nickname_id){\n      nickname_id\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst StyledLabel = styled.label`\n  display: flex;\n  ${({ theme }) => theme.setFont(2)}\n  font-weight: 600;\n  justify-content: space-between;\n`;\nconst StyledInput = styled.input`\n  display: flex;\n  ${({ theme }) => theme.setFont(2)}\n  font-weight: 600;\n  margin: 1rem;\n  text-align: center;\n  width: min-content;\n`;\n\nexport default function Input(props) {\n  const { name, value, handleChange } = props;\n  const title = name.toUpperCase().replace(\"_\", \" \");\n\n  const possibleTypes = [\n    \"password\",\n    \"date\",\n    \"time\",\n    \"number\",\n    \"color\",\n    \"email\",\n  ];\n\n  const type = possibleTypes.reduce((finalType, currentType) => {\n    return name.includes(currentType) ? currentType : finalType;\n  }, \"text\");\n\n  return (\n    <>\n      <StyledLabel htmlFor={name}>{title}:</StyledLabel>\n      <StyledInput\n        id={name}\n        name={name}\n        placeholder={name.replace(\"_\", \" \")}\n        value={value}\n        type={type}\n        onChange={handleChange}\n      />\n    </>\n  );\n}\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ]).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default function Error(props) {\n    const { error, errorType } = props\n    \n    if (error.length === 0) return null\n    return (\n        <div>\n            {errorType}: {error}\n        </div>\n    )\n}\nError.propTypes = {\n    error: PropTypes.string.isRequired,\n    errorType: PropTypes.string.isRequired\n}\n","import styled from 'styled-components'\n\nconst StyledButton = styled.button`\n    font-weight: 400;\n    padding: 1rem;\n    ${({ theme }) => theme.setFont(2)}\n    color: ${({ theme }) => theme.colors.slime};\n    border: none;\n    text-decoration: none;\n    background-color: inherit;\n    cursor: pointer;\n    &:hover {\n        text-decoration: underline;\n    }\n    \n`\n\nexport default StyledButton\n","\nimport { useEffect, useState } from \"react\"\nimport * as yup from 'yup'\n\nconst useForm = (initialState, schema) => {\n  const [form, setForm] = useState(initialState)\n  const [errors, setErrors] = useState(initialState)\n  const [disabled, setDisabled] = useState(true)\n  \n  const validate = (name, value) => {\n    yup.reach(schema, name)\n      .validate(value)\n      .then(() => setErrors({ ...errors, [name]: \"\" }))\n      .catch(err => setErrors({ ...errors, [name]: err.errors[0] }));\n  }\n  \n  const handleChange = e => {\n    const { type, name, checked, value } = e.target\n    const newValue = type === \"checkbox\" ? checked : value\n    setForm({ ...form, [name]: newValue })\n    if (schema) validate(name, newValue)\n  }\n  \n  const reset = () => setForm(initialState)\n\n  useEffect(() => {\n    if (schema) {\n      schema.isValid(form)\n        .then(valid => setDisabled(!valid))\n    }\n  }, [form]) //eslint-disable-line\n  \n  return [form, handleChange, reset, errors, disabled]\n} \n\nexport default useForm","import React from \"react\";\nimport Input from \"./Input\";\nimport Error from \"./Error\";\nimport Button from \"./Button\";\nimport useForm from \"../../../hooks/useForm\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  width: 100%;\n  fieldset {\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 10px;\n    width: 80%;\n    border: solid ${({ theme }) => theme.colors.blue};\n  }\n  legend {\n    ${({ theme }) => theme.setFont(3)}\n    margin-left: 5rem;\n  }\n`;\n\nexport default function Form(props) {\n  const { title, initialState, schema, submit } = props;\n  const [formState, handleChange, reset, errors, disabled] = useForm(\n    initialState,\n    schema\n  );\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    submit(formState);\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <fieldset>\n        <legend>{title}</legend>\n        {Object.keys(formState).map((value) => (\n          <Input\n          key={`${value}input`}\n          name={value}\n          value={formState[value]}\n          handleChange={handleChange}\n          />\n          ))}\n        {Object.keys(errors).map((value) => (\n          <Error\n          key={`${value}error`}\n          errorType={value}\n          error={errors[value]}\n          />\n          ))}\n        <Button type=\"reset\" onClick={reset}>\n          Reset\n        </Button>\n        <Button type=\"submit\" disabled={disabled}>\n          Submit\n        </Button>\n      </fieldset>\n    </StyledForm>\n  );\n}\nForm.propTypes = {\n  initialState: PropTypes.object.isRequired,\n  schema: PropTypes.object,\n  submit: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired\n};\n","import * as yup from \"yup\"\n\nconst shared = {\n    username: yup.string().required().trim().min(6),\n    password: yup.string().required().trim().min(6)\n}\n\nconst loginSchema = yup.object().shape({\n    ...shared\n})\n\nconst signupSchema = yup.object().shape({\n    ...shared,\n    email: yup.string().email().trim(),\n})\n\n\nexport {\n    loginSchema,\n    signupSchema\n}","import React, { useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { loginSchema } from \"../../../schemas/users\";\nimport { useNavigate } from \"react-router\";\n\nconst initialState = {\n  username: \"\",\n  password: \"\",\n};\n\nfunction Login(props) {\n  const { data, callMutation } = props;\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (data?.login) {\n      localStorage.setItem(\"token\", data.login)\n      navigate(\"/\")\n      window.location.reload()\n    }\n  }, [data]); // eslint-disable-line\n\n  return (\n    <Form\n      title=\"Login: \" \n      initialState={initialState} \n      schema={loginSchema} \n      submit={callMutation} \n    />\n  );\n}\n\nexport default Login;\n","import React from 'react'\nimport MutationCall from '../common/HigherOrder/MutationCall'\nimport { LOGIN_CALL } from \"../../services/mutations\";\nimport Login from '../common/Form/Login';\n\nexport default function LoginPage() {\n    return (\n        <MutationCall query={LOGIN_CALL} Component={Login}/>\n    )\n}\n","import React from 'react';\nimport LoginPage from \"../../pages/LoginPage\"\n\nexport default function PrivatePage({ component: Component, ...rest }) {\n\n    return localStorage.getItem(\"token\") ? (\n        <Component {...rest}  />\n    ) : (\n        <LoginPage/>\n    )\n}","import React, { useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { signupSchema } from \"../../../schemas/users\";\nimport { useNavigate } from \"react-router\";\n\nconst initialState = {\n  email: \"\",\n  username: \"\",\n  password: \"\",\n};\n\nfunction Signup(props) {\n  const { data, callMutation } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (data?.addUser) {\n      localStorage.setItem(\"token\", data.addUser);\n      navigate(\"/\");\n      window.location.reload()\n    }\n  }, [data]); // eslint-disable-line\n\n  return (\n    <Form\n      title=\"Sign Up:\"\n      initialState={initialState}\n      schema={signupSchema}\n      submit={callMutation} \n    />\n  );\n}\n\nexport default Signup;\n","import React from 'react'\nimport MutationCall from '../common/HigherOrder/MutationCall'\nimport Signup from '../common/Form/Signup'\nimport { SIGNUP } from \"../../services/mutations\";\n\nexport default function SignupPage() {\n    return (\n       <MutationCall query={SIGNUP} Component={Signup}/>\n    )\n}\n","import { gql } from \"@apollo/client\";\n\nconst wantedProperties = `\n    nickname_id\n    likes\n    liked\n    createdBy\n    nickname\n    user {\n    username\n    }\n`;\n\nexport const GET_NICKNAMES = gql`\n  query getNicknames($page: Int!){\n    nicknames(page: $page) {\n      ${wantedProperties}\n    }\n  }\n`;\n\nexport const GET_USER_NICKNAMES = gql`\n  query Get_User_Nicknames($username: String!) {\n    user(username: $username) {\n      nicknames {\n        ${wantedProperties}\n      }\n    }\n  }\n`;","import React, { useMemo } from \"react\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport { useMutation } from \"@apollo/client\";\nimport { LIKE } from \"../../../services/mutations\";\nimport options from \"../../../services/options\";\nimport Button from \"../Form/Button\";\n\n\nexport default function LikeButton(props) {\n  const { likes, liked, nickname_id } = props;\n  const [like, { loading, error }] = useMutation(LIKE, options);\n\n  const [userliked, toggleLiked] = useToggle(liked);\n\n  const totalLikes = useMemo(() => {\n    return likes + (liked ? -1 : 0) + (userliked ? 1 : 0);\n  }, [userliked, liked, likes]);\n\n  const handleLike = () => {\n    if (!loading) {\n      like({ variables: { nickname_id } });\n      toggleLiked();\n    }\n  };\n\n  if (error) return <p>{error.message}</p>;\n\n  return (\n    <div>\n      <Button onClick={handleLike}>{totalLikes} Likes</Button>\n    </div>\n  );\n}\n","import { useState } from \"react\"\n\nexport default function useToggle(defaultValue) {\n  const [value, setValue] = useState(defaultValue)\n\n  function toggleValue(value) {\n    setValue(currentValue =>\n      typeof value === \"boolean\" ? value : !currentValue\n    )\n  }\n\n  return [value, toggleValue]\n}","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation } from \"@apollo/client\";\nimport { DELETE_NICKNAME} from \"../../../services/mutations\";\nimport options from \"../../../services/options\";\nimport styled from \"styled-components\";\nimport Button from \"../Form/Button\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\n\nconst StyledNickname = styled.li`\n  list-style: none;\n  font-family: \"Fredoka One\", cursive;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 10px;\n  border: solid ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.orange};\n`;\n\nexport default function Nickname(props) {\n  const { user, nickname, nickname_id, createdBy, ...rest } = props;\n  const { username } = user\n  const [delNick, { data, loading, error }] = useMutation(DELETE_NICKNAME, options);\n        \n  const handleDelete = () => {\n    if (!loading) {\n      delNick({ variables: { nickname_id } });\n    }\n  };\n  \n  useEffect(() => {\n    if (data) {\n      window.location.reload();\n    }\n  }, [data])\n\n  if (error) return <p>{error.message}</p>;\n\n  return (\n    <StyledNickname>\n      <h3>{nickname}</h3>\n      <Link to={`/user/${username}`}>\n        <Button className=\"creator\">\n          By {username}\n        </Button>\n      </Link>\n      <LikeButton {...rest} nickname_id={nickname_id}/>\n      {createdBy && (\n        <Button onClick={handleDelete}> \n          Delete \n        </Button>\n      )}\n    </StyledNickname>\n  );\n}\nNickname.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n  }),\n  nickname: PropTypes.string.isRequired,\n  likes: PropTypes.number.isRequired,\n  liked: PropTypes.bool.isRequired,\n  createdBy: PropTypes.bool.isRequired,\n};\n","import React from 'react'\nimport Nickname from './Nickname'\n\nexport default function NicknameList(props) {\n    const { nicknames, user } = props.data\n    return (\n        <ul>\n            {nicknames?.map((nickname) => (\n                <Nickname {...nickname} key={nickname.nickname_id} />\n            ))}\n            {user?.nicknames?.map((nickname) => (\n                <Nickname {...nickname} key={nickname.nickname_id} />\n            ))}\n      </ul>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Button from \"./Form/Button\"\n\n\nexport default function PageLinks() {\n    const { page } = useParams();\n    const pageInt = parseInt(page) || 0;\n    return (\n        <div>\n            {pageInt > 0 && <Link to={`/page/${pageInt - 1}`}>\n                <Button> \n                    Prev Page \n                </Button>\n            </Link>}\n            <Link to={`/page/${pageInt + 1}`}>\n                <Button> \n                    Next Page \n                </Button>\n            </Link>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport options from '../../../services/options'\nimport Loader from \"../Loader\"\n\nexport default function QueryCall(props) {\n    \n    const { query, Component, variables = {} } = props\n    const { data, loading, error } = useQuery(query, {...options, variables})\n\n    if (loading) return <Loader />;\n    if (error) return <p>{error.message}</p>;\n\n    return (\n        <Component data={data}/>\n    )\n}\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { GET_NICKNAMES } from \"../../services/queries\";\n\nimport NicknameList from \"../common/Nickname/NicknameList\";\nimport PageLinks from \"../common/PageLinks\";\nimport QueryCall from \"../common/HigherOrder/QueryCall\";\n\nexport default function NicknamesPage() {\n  const { page } = useParams();\n  const pageInt = parseInt(page) || 0;\n\n  return (\n    <div>\n        <QueryCall \n            query={GET_NICKNAMES} \n            Component={NicknameList} \n            variables={{ page: pageInt }}\n        />\n        <PageLinks/>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nexport default function NavLink(props) {\n    return (\n        <div className=\"button button-6\">\n            <div className=\"spin\"></div>\n            <Link {...props}>{props.children}</Link>\n        </div>\n    )\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Form/Button\";\nimport NavLink from \"./NavLink\";\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.teal};\n  background-color: ${({ theme }) => theme.colors.blue};\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  font-style: italic;\n  h1 {\n    ${({ theme }) => theme.setFont(4)}\n    font-weight: 600;\n  }\n`;\n\nfunction Header() {\n  const token = localStorage.getItem(\"token\")\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    window.location.reload();\n  };\n\n  return (\n    <StyledHeader>\n      <Link to=\"/\">\n        <Button id=\"TitleHeader\">\n          <h1>DAN SCHNEIDER NICKNAMES</h1>\n        </Button>\n      </Link>\n      <nav>\n        {token ? (\n          <>\n            <NavLink to=\"/\">All Nicknames</NavLink>\n            <NavLink to=\"/create\">Add Nickname</NavLink>\n            <NavLink to=\"\" onClick={logout}>Logout</NavLink>\n          </>\n        ) : (\n          <>\n            <NavLink to=\"/signup\">Signup</NavLink>\n            <NavLink to=\"/login\">Login</NavLink>\n          </>\n        )}\n      </nav>\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport { useParams } from 'react-router'\nimport { GET_USER_NICKNAMES } from '../../services/queries'\nimport QueryCall from '../common/HigherOrder/QueryCall'\nimport NicknameList from '../common/Nickname/NicknameList'\n\nexport default function UserNicknames() {\n    const { username } = useParams()\n    \n    return (\n        <div>\n            <h2>{username}'s Nicknames</h2>\n            <QueryCall \n                Component={NicknameList}\n                query={GET_USER_NICKNAMES}\n                variables={{ username }}\n            />\n        </div>\n    )\n}\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_API_URL,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token,\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport { StyledForm } from \"./Form\";\n\nexport default function CreateNickname(props) {\n  const { callMutation, data } = props;\n  const [nickname, setNickname] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const submit = (e) => {\n    e.preventDefault();\n    callMutation({ nickname });\n  };\n\n  useEffect(() => {\n    if (data) {\n      const { username } = data.addNickname.user;\n      navigate(`/user/${username}`);\n    }\n  }, [data]); // eslint-disable-line\n\n  const handleChange = (e) => {\n    setNickname(e.target.value);\n  };\n  const disabled = useMemo(\n    () => !nickname.includes(\"Dan\") && !nickname.includes(\"Schneider\"),\n    [nickname]\n  );\n\n  return (\n    <>\n      <StyledForm onSubmit={submit}>\n        <fieldset>\n          <legend>Create a new Nickname</legend>\n          <Input name=\"nickname\" value={nickname} handleChange={handleChange} />\n          {disabled && <p>Must contain 'Dan' or 'Schneider'</p>}\n          <Button type=\"submit\" disabled={disabled}>\n            Submit\n          </Button>\n        </fieldset>\n      </StyledForm>\n    </>\n  );\n}\n","import React from 'react'\nimport MutationCall from '../common/HigherOrder/MutationCall'\nimport { ADD_NICKNAME } from '../../services/mutations'\nimport CreateNickname from '../common/Form/CreateNickname'\n\nexport default function CreatePage() {\n    return (\n        <MutationCall query={ADD_NICKNAME} Component={CreateNickname}/>\n    )\n}\n","import PrivatePage from \"./components/common/HigherOrder/PrivatePage\";\nimport LoginPage from \"./components/pages/LoginPage\"\nimport SignupPage from \"./components/pages/SignupPage\"\nimport NicknamesPage from \"./components/pages/NicknamesPage\"\nimport Header from \"./components/common/Header\";\nimport UserNicknames from \"./components/pages/UserNicknames\";\nimport React from \"react\"\nimport { Routes, Route } from \"react-router-dom\"\nimport { ApolloProvider } from \"@apollo/client\"\nimport \"./styles/reset.css\"\nimport styled from \"styled-components\";\nimport client from \"../src/services/client\"\nimport CreatePage from \"./components/pages/CreatePage\";\n\nconst StyledMain = styled.main`\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.tan};\n  ${({ theme }) => theme.setFont(2)};\n  min-height: 100vh;\n`\n\nfunction App() {\n  \n  return (\n    <ApolloProvider client={client}>\n      <Header/>\n      <StyledMain>\n        <Routes>\n          <Route path=\"/signup\" element={<SignupPage/>}/>\n          <Route path=\"/login\" element={<LoginPage/>}/>\n          <Route path=\"/\" element={<PrivatePage component={NicknamesPage}/>}/>\n          <Route path=\"/page/:page\" element={<PrivatePage component={NicknamesPage}/>}/>\n          <Route path=\"/user/:username\" element={<PrivatePage component={UserNicknames}/>}/>\n          <Route path=\"/create\" element={<PrivatePage component={CreatePage}/>}/>\n          <Route path=\"*\" element={<PrivatePage component={NicknamesPage}/>}/>\n        </Routes>\n      </StyledMain>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const theme = {\n  colors: {\n    purple: \"#AD40B5\",\n    teal: \"#66CED6\",\n    navy: \"#001B2E\",\n    tan: \"#FFC49B\",\n    paleGreen: \"#C0DA74\",\n    orange: \"#E17C0B\",\n    slime: \"#51CB20\",\n    blue: \"#134D93\",\n    black: \"#070707\",\n    lightGrey: \"#CECCCC\"\n  },\n  setFont: (size) => {\n    return `font-size: ${size * baseFont}rem;`;\n  },\n};\n\nconst baseFont = 1.618 / 2;\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport theme from \"./styles/theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}